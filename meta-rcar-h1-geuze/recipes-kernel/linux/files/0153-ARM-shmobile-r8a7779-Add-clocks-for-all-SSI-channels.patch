From 8cdd073a370df95af15b5b01339ea3b6c0960cbb Mon Sep 17 00:00:00 2001
From: Phil Edworthy <phil.edworthy@renesas.com>
Date: Thu, 20 Dec 2012 18:23:16 +0000
Subject: [PATCH 153/215] ARM: shmobile: r8a7779: Add clocks for all SSI
 channels

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
 arch/arm/mach-shmobile/clock-r8a7779.c |   30 ++++++++++++++++++++++++------
 1 file changed, 24 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-shmobile/clock-r8a7779.c b/arch/arm/mach-shmobile/clock-r8a7779.c
index d7bdd30..a23c7b7 100644
--- a/arch/arm/mach-shmobile/clock-r8a7779.c
+++ b/arch/arm/mach-shmobile/clock-r8a7779.c
@@ -86,12 +86,14 @@ static struct clk div4_clks[DIV4_NR] = {
 				      0x0300, CLK_ENABLE_ON_INIT),
 };
 
-enum { MSTP331, MSTP330, MSTP323, MSTP322, MSTP321, MSTP320,
+enum { MSTP331, MSTP330,
+	MSTP323, MSTP322, MSTP321, MSTP320, MSTP312, MSTP311, MSTP310, MSTP309,
+	MSTP308, MSTP307,
 	MSTP120, MSTP115, MSTP114, MSTP110, MSTP109,
 	MSTP108, MSTP105, MSTP103, MSTP101, MSTP100,
 	MSTP030, MSTP029, MSTP028, MSTP027, MSTP026, MSTP025, MSTP024, MSTP023,
-	MSTP022, MSTP021, MSTP016, MSTP015, MSTP014, MSTP012, MSTP011, MSTP008,
-	MSTP007,
+	MSTP022, MSTP021, MSTP016,
+	MSTP015, MSTP014, MSTP012, MSTP011, MSTP010, MSTP009, MSTP008, MSTP007,
 	MSTP_NR };
 
 static struct clk mstp_clks[MSTP_NR] = {
@@ -101,6 +103,12 @@ static struct clk mstp_clks[MSTP_NR] = {
 	[MSTP322] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 22, 0), /* SDHI1 */
 	[MSTP321] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 21, 0), /* SDHI2 */
 	[MSTP320] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 20, 0), /* SDHI3 */
+	[MSTP312] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 12, 0), /* SSI4 */
+	[MSTP311] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 11, 0), /* SSI5 */
+	[MSTP310] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 10, 0), /* SSI6 */
+	[MSTP309] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 9, 0), /* SSI7 */
+	[MSTP308] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 8, 0), /* SSI8 */
+	[MSTP307] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR3, 7, 0), /* SSI9 */
 	[MSTP120] = SH_CLK_MSTP32(&div4_clks[DIV4_S], MSTPCR1, 20, 0), /* VIN3 */
 	[MSTP115] = SH_CLK_MSTP32(&div4_clks[DIV4_S], MSTPCR1, 15, 0), /* SATA */
 	[MSTP114] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR1, 14, CLK_ENABLE_ON_INIT), /* ETH */
@@ -124,9 +132,11 @@ static struct clk mstp_clks[MSTP_NR] = {
 	[MSTP016] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 16, 0), /* TMU0 */
 	[MSTP015] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 15, 0), /* TMU1 */
 	[MSTP014] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 14, 0), /* TMU2 */
-	[MSTP012] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 12, 0), /* Audio */
-	[MSTP011] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 11, 0), /* Audio */
-	[MSTP008] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 8, 0), /* Audio */
+	[MSTP012] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 12, 0), /* SSI0 */
+	[MSTP011] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 11, 0), /* SSI1 */
+	[MSTP010] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 10, 0), /* SSI2 */
+	[MSTP009] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 9, 0), /* SSI3 */
+	[MSTP008] = SH_CLK_MSTP32(&div4_clks[DIV4_P], MSTPCR0, 8, 0), /* SRU */
 	[MSTP007] = SH_CLK_MSTP32(&div4_clks[DIV4_S], MSTPCR0,  7, 0), /* HSPI */
 };
 
@@ -206,6 +216,14 @@ static struct clk_lookup lookups[] = {
 
 	CLKDEV_CON_ID("ssi0", &mstp_clks[MSTP012]),
 	CLKDEV_CON_ID("ssi1", &mstp_clks[MSTP011]),
+	CLKDEV_CON_ID("ssi2", &mstp_clks[MSTP010]),
+	CLKDEV_CON_ID("ssi3", &mstp_clks[MSTP009]),
+	CLKDEV_CON_ID("ssi4", &mstp_clks[MSTP312]),
+	CLKDEV_CON_ID("ssi5", &mstp_clks[MSTP311]),
+	CLKDEV_CON_ID("ssi6", &mstp_clks[MSTP310]),
+	CLKDEV_CON_ID("ssi7", &mstp_clks[MSTP309]),
+	CLKDEV_CON_ID("ssi8", &mstp_clks[MSTP308]),
+	CLKDEV_CON_ID("ssi9", &mstp_clks[MSTP307]),
 	CLKDEV_CON_ID("sru", &mstp_clks[MSTP008]),
 };
 
-- 
1.7.9.5

