From 2aec2419dd4a64d441f2e8727f8d6f3005a8f8ac Mon Sep 17 00:00:00 2001
From: Phil Edworthy <phil.edworthy@renesas.com>
Date: Mon, 4 Mar 2013 09:53:56 +0000
Subject: [PATCH 151/215] rcarvin: Add ability to limit the MBUS format used

Currently, the VIN driver reports all formats supported by the SoC
camera. When the VIN driver and SoC camera support a number of
common formats, we need to be able to specify which one to use.

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
 drivers/media/video/rcarvin.c |   12 ++++++++++++
 include/media/rcarvin.h       |    7 +++----
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/drivers/media/video/rcarvin.c b/drivers/media/video/rcarvin.c
index 2440120..7b2660c 100644
--- a/drivers/media/video/rcarvin.c
+++ b/drivers/media/video/rcarvin.c
@@ -1097,6 +1097,8 @@ static int rcar_vin_get_formats(struct soc_camera_device *icd, unsigned int idx,
 {
 	struct v4l2_subdev *sd = soc_camera_to_subdev(icd);
 	struct device *dev = icd->parent;
+	struct soc_camera_host *ici = to_soc_camera_host(dev);
+	struct rcar_vin_dev *pcdev = ici->priv;
 	int ret, k, n;
 	int formats = 0;
 	struct rcar_vin_cam *cam;
@@ -1189,6 +1191,16 @@ static int rcar_vin_get_formats(struct soc_camera_device *icd, unsigned int idx,
 		if (cam->extra_fmt)
 			break;
 
+		/*
+		 * Since the SoC camera framework doesn't allow the board to
+		 * specify the MBUS format used, we have to limit the formats
+		 * reported back.
+		 */
+		if (pcdev->pdata->format) {
+			if (pcdev->pdata->format != code)
+				break;
+		}
+
 		/* Add all our formats can be generated by VIN */
 		cam->extra_fmt = rcar_vin_formats;
 
diff --git a/include/media/rcarvin.h b/include/media/rcarvin.h
index cce4ef7..a04be89 100644
--- a/include/media/rcarvin.h
+++ b/include/media/rcarvin.h
@@ -3,13 +3,12 @@
 
 #include <media/soc_camera.h>
 
-#define RCAR_VIN_FLAG_USE_8BIT_BUS	(1 << 0) /* use  8bit bus width */
-#define RCAR_VIN_FLAG_USE_16BIT_BUS	(1 << 1) /* use 16bit bus width */
-#define RCAR_VIN_FLAG_HSYNC_LOW		(1 << 2) /* default High if possible */
-#define RCAR_VIN_FLAG_VSYNC_LOW		(1 << 3) /* default High if possible */
+#define RCAR_VIN_FLAG_HSYNC_LOW		(1 << 0) /* default High if possible */
+#define RCAR_VIN_FLAG_VSYNC_LOW		(1 << 1) /* default High if possible */
 
 struct rcar_vin_info {
 	unsigned long flags;
+	enum v4l2_mbus_pixelcode format;
 };
 
 #endif /* __ASM_RCAR_VIN_H__ */
-- 
1.7.9.5

